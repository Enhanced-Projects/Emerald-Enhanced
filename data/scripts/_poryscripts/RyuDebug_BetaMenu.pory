script StartBetaMenu{
    setflag(FLAG_RYU_BETA_MENU_USED)
    msgbox(BetaMenuIntro)
    closemessage
    goto(RDB_BetaMenuStandalone)
}

script RDB_StartMenuBetaOptionBootstrap{
    fadescreenspeed(FADE_FROM_BLACK, 0)
    goto(RDB_BetaMenuStandalone)
}

script RDB_BetaMenuStandalone{
    setflag(FLAG_RYU_BETA_MENU_OPEN)
    buffernumberstring(0, VAR_LAST_KNOWN_GAME_VERSION)
    buffernumberstring(1, VAR_SAVE_FILE_CREATED_ON_VERSION)
    msgbox("      EE: v{STR_VAR_1} / Save: v{STR_VAR_2}\nChoose an option or Exit.")
    scrollingmultichoice(SMC_RYUBETAMENU, 30, 0, 6, 1)
    closemessage
    switch(var(VAR_RESULT)){
        case 0:
            goto(RDBM_ViewSaveVersion)
        case 1:
            goto(RDBM_CheckWaystone)
        case 2:
            goto(RDBM_ResetTemporaryBattleFlags)
        case 3:
            goto(RDBM_ResetTemporaryCutsceneFlags)
        case 4:
            goto(RDBM_ResetBadges)
        case 5:
            goto(RDBM_ResetGCMS)
        case 6:
            goto(RDBM_TeleportHome)
        case 7:
            goto(RDBM_ResetRTC)
        case 8:
            goto(RDBM_RetroFillDex)
        case 9:
            goto(RDBM_FixFollowers)
        case 10:
            goto(RDBM_ViewTutorials)
        case 11:
            goto(RDBM_ExitResetMenu)
    }
    goto(RDBM_ExitResetMenu)
}

script RDBM_ResetRTC {
    msgbox("Resetting the RTC can result in save\nfile damage.\pIf you continue, all current time based\nevents will also be reset to prevent\lexploits.\pAre you sure you wish to reset\nthe RTC?", MSGBOX_YESNO)
    if (var(VAR_RESULT) == TRUE) {
        msgbox(format("We're now resetting time based events."))
        setvar(VAR_RYU_DAILY_QUEST_ASSIGNEE_FACTION, 7)
        setvar(VAR_RYU_DAILY_QUEST_DATA, 0xFFFF)
        setvar(VAR_RYU_DAILY_QUEST_TARGET, 0xFFFF)
        setvar(VAR_RYU_DAILY_QUEST_TYPE, 0xFFFF)
        clearflag(FLAG_RYU_VERBOSE_MODE)
        clearflag(FLAG_DAILY_QUEST_ACTIVE)
        setflag(FLAG_FINISHED_PROFESSIONAL_DAILY)
        setflag(FLAG_FINISHED_STUDENT_DAILY)
        setflag(FLAG_FINISHED_POKEFAN_DAILY)
        setflag(FLAG_FINISHED_NOBLE_DAILY)
        setflag(FLAG_FINISHED_OUTCAST_DAILY)
        setflag(FLAG_FINISHED_NATURALIST_DAILY)
        callnative(RyuClearDeliveryQueue)
        callnative(RyuClearAlchemyEffect)
        callnative(RyuResetRealEstateData)
        msgbox("Successfully reset time based events.")
        closemessage
        msgbox("Please enter the current Real Life time.")
        special(StartWallClock)
        waitstate
        msgbox("Time set...\pWe will now save the game.\pPlease wait. . .")
        callnative(RyuForceSaveTheGame)
        msgbox("The RTC was successfully reset.")
    }
    else {
        msgbox("The RTC will not be reset.")
    }
    closemessage
    release
    end
}

script RDBM_ViewTutorials {
    msgbox("Select a tutorial to view.")
    bufferdynamicmulti(RDBM_Tut1Lbl, RDBM_Tut2Lbl, RDBM_Tut3Lbl, RDBM_Tut4Lbl, RDBM_Tut5Lbl, RDBM_Tut6Lbl)
    multichoice(0, 0, MULTI_DYNAMIC_6, 1)
    switch (var(VAR_RESULT)) {
        case 0:
            call(RyuTutorial_Followers)
        case 1:
            call(RyuTutorial_RealEstate)
        case 2:
            call(RyuTutorial_Quest)
        case 3:
            call(RyuTutorial_Factions)
        case 4:
            call(RyuTutorial_Autoscale)
    }
        release
        end
}

text RDBM_Tut1Lbl {
    "Followers"
}

text RDBM_Tut2Lbl {
    "Real Estate"
}

text RDBM_Tut3Lbl {
    "Quest"
}

text RDBM_Tut4Lbl {
    "Factions"
}

text RDBM_Tut5Lbl {
    "Autoscale"
}

text RDBM_Tut6Lbl {
    "Exit"
}

script RDBM_ViewSaveVersion{
    callnative(RyuBetaMenuDynamicInfoBox)
    drawinfobox(INFOBOX_DYNAMIC)
    msgbox(RDBM_ShowSaveFileOriginalVersion)
    waitbuttonpress
    removeinfobox
	release
	end
}

script RDBM_BlankOption{
    msgbox(format("This option doesn't currently do anything."))
    goto(RDB_BetaMenuStandalone)
}

script RDBM_CheckWaystone{
    specialvar(VAR_RESULT, RyuCheckIfWaystoneShouldBeDisabled)
    switch (var(VAR_RESULT)) {
        case 10:
            msgbox(format("You have started the elite four. You cannot leave."))
            goto(RDBM_WaystoneDisabled)
        case 20:
            msgbox("Finish your Training Center session.")
            goto(RDBM_WaystoneDisabled)
        case 30:
            msgbox(format("Finish working with Blaise in Granite Cave"))
            goto(RDBM_WaystoneDisabled)
        case 40:
            msgbox(format("Finish clearing Aqua out of the hideout with Courtney."))
            goto(RDBM_WaystoneDisabled)
        case 50:
            msgbox(format("Finish clearing out magma in the Space Center."))
            goto(RDBM_WaystoneDisabled)
        case 60:
            msgbox(format("Finish Escorting the Hexer to the top floor of Mt. Pyre."))
            goto(RDBM_WaystoneDisabled)
        case 70:
            msgbox("Finish robbing the Oldale Mart.")
            goto(RDBM_WaystoneDisabled)
        case 80:
            msgbox("Finish talking with the Devon Workers.")
            goto(RDBM_WaystoneDisabled)
        case 90:
            msgbox("Face off with Groudon.")
            goto(RDBM_WaystoneDisabled)
        case 100:
            msgbox("Finish your Trainer Hill challenge.")
            goto(RDBM_WaystoneDisabled)
        case 110:
            msgbox("You should be escorting the Nurse.")
            goto(RDBM_WaystoneDisabled)
        case 120:
            msgbox(format("You can't leave limbo, you lost your challenge."))
            goto(RDBM_WaystoneDisabled)
        case 130:
            msgbox(format("You should be chasing Wally down\nwith May."))
            goto(RDBM_WaystoneDisabled)
        case 140:
            msgbox(format("The gods of this world have laid claim to your soul."))
            goto(RDBM_WaystoneDisabled)
        case 150:
            msgbox(format("You're supposed to be working with lucy to find and clear the Aether Foundation employees out of the area."))
            goto(RDBM_WaystoneDisabled)
    }
    msgbox(WaystoneEnabled)
    clearflag(FLAG_RYU_WAYSTONE_DISABLED)
    closemessage
	release
	end
}

script RDBM_WaystoneDisabled{
    msgbox(WaystoneDisabled)
    closemessage
    release
    end
}

text WaystoneEnabled{
    "{COLOR LIGHT_GREEN}{SHADOW GREEN}Waystone should be Available."
}

text WaystoneDisabled{
    "{COLOR LIGHT_RED}{SHADOW RED}Waystone should be disabled."
}

script RDBM_ResetTemporaryBattleFlags{
    clearflag(FLAG_RYU_MAX_SCALE)
	clearflag(FLAG_RYU_BOSS_WILD)
	clearflag(FLAG_RYU_RANDOMBATTLE)
    clearflag(FLAG_RYU_ENABLE_FABA_MAGNETO_FIELD)
	msgbox(RDBM_ResetTempFlagsMsg)
	release
	end
}

script RDBM_ResetBadges{
    clearflag(FLAG_BADGE01_GET)
	clearflag(FLAG_BADGE02_GET)
	clearflag(FLAG_BADGE03_GET)
	clearflag(FLAG_BADGE04_GET)
	clearflag(FLAG_BADGE05_GET)
	clearflag(FLAG_BADGE06_GET)
	clearflag(FLAG_BADGE07_GET)
	clearflag(FLAG_BADGE08_GET)
	msgbox(RDBM_BadgesReset)
	release
	end
}

script RDBM_ResetGCMS{
    lockall
	setvar(VAR_RYU_GCMS_SPECIES, 0)
	setvar(VAR_RYU_GCMS_VALUE, 0)
	msgbox(RDBM_GCMSReset)
	release
	end
}

script RDBM_ExitResetMenu{
    msgbox(RDBM_Exiting MSGBOX_DEFAULT)
	release
	end
}

script RDBM_TeleportHome{
    if (flag(FLAG_RYU_FRONTIER_MODE) == true) {
        goto(Ryu_FrontierModeCheckLeave)
    }
    if (flag(FLAG_RYU_LIMBO) == true) {
        msgbox(format("You cannot teleport from Limbo."))
        release
        end
    }
	msgbox(RGBM_TPHOME)
	closemessage
	goto(RT_Home)
}

script RDBM_ShowActiveEffects {
    msgbox("Showing active effects.")
    callnative(RyuDebug_ShowActiveAlchemy)
    delay(65)
    if (flag(FLAG_RYU_HAS_FOLLOWER) == TRUE) {
        callnative(RyuDebug_ShowActiveFollower)
        delay(65)
    }
    if (var(VAR_REPEL_STEP_COUNT) > 0) {
        buffernumberstring(0, VAR_REPEL_STEP_COUNT)
        debugprint(RDBM_RepelCount)
    }
    release
    end
}

script RDBM_ScriptDelay2s {
    delay(120)
    return
}

script RDBM_RetroFillDex {
    callnative(RetroPokedexRegister)
    buffernumberstring(0, VAR_RESULT)
    msgbox("Successfully scanned boxes for\nunregistered PokÃ©mon. {STR_VAR_1} mon(s) found.")
    release
    end
}

script RDBM_FixFollowers{
    msgbox("Restoring all eligible followers\nto their home location...")
    delay(60)
    closemessage
    callnative(Ryu_Restorefollowers)
    buffernumberstring(0, VAR_RESULT)
    msgbox("{STR_VAR_1} followers were restored home.")
    closemessage
    release
    end
}

script RDBM_ResetTemporaryCutsceneFlags{
    msgbox("Now resetting flags related to\ncutscenes.\pThis should fix situations like\nbeing stuck in your room with mom\land leaf.")
    setflag(FLAG_RYU_HIDE_REL_OBJECTS)
    setflag(FLAG_HIDE_CHAMPIONS_ROOM_BIRCH)
    setflag(FLAG_HIDE_CHAMPIONS_ROOM_RIVAL)
    setflag(FLAG_HIDE_CHAMPIONS_ROOM_STEVEN)
    fadescreen(FADE_TO_BLACK)
    setvar(VAR_TEMP_D, 20)
    while(var(VAR_TEMP_D) > 0){
        removeobject(VAR_TEMP_D)
        subvar(VAR_TEMP_D, 1)
    }
    fadescreen(FADE_FROM_BLACK)
    msgbox("The cutscene objects should\nnow be cleared.")
    goto(RDB_BetaMenuStandalone)
}

text RDBM_RepelCount {
    "Repel Active: {STR_VAR_1} steps left.$"
}
	
text BetaMenuIntro{
    "Warning! Items on this menu can\n"
	"damage your save file!$"
}

text RDBM_ShowSaveFileOriginalVersion{
	"Please include this information\nwith your bug report on discord.$"
}

text RDBM_DisplayQuestVarsMsg{
	"Magma: {STR_VAR_1}, DevonM: {STR_VAR_2}, DevonS: {STR_VAR_3}\n"
	"Leaf: {RYU_STR_1}, Lanette: {RYU_STR_2} Aqua: {RYU_STR_3}\l"
    "Nurse: {RYU_STR_4}$"
}

text RDBM_ResetTempFlagsMsg{
	"{COLOR LIGHT_RED}{SHADOW RED} (Temporary battle flags have been\n reset)$"
}

text RDBM_Unimplemented{
	"This option does nothing. It's\na placeholder for future options.$"
}

text RDBM_BadgesReset{
	"All badges have been removed.$"
}

text RDBM_GCMSReset{
	"Gcms has been reset.$"
}

text RGBM_TPHOME{
	"Teleporting {PLAYER} home...$"
}

text RDBM_Exiting{
	"Exiting menu without change...$"
}